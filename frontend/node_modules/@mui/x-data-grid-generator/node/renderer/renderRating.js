"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderRating = renderRating;
var React = _interopRequireWildcard(require("react"));
var _Box = _interopRequireDefault(require("@mui/material/Box"));
var _Rating = _interopRequireDefault(require("@mui/material/Rating"));
var _jsxRuntime = require("react/jsx-runtime");
const RatingValue = /*#__PURE__*/React.memo(function RatingValue(props) {
  const {
    value
  } = props;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Box.default, {
    sx: {
      display: 'flex',
      alignItems: 'center',
      lineHeight: '24px',
      color: 'text.secondary'
    },
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Rating.default, {
      value: value,
      sx: {
        mr: 1
      },
      readOnly: true
    }), " ", Math.round(Number(value) * 10) / 10]
  });
});
function renderRating(params) {
  if (params.value == null) {
    return '';
  }

  // If the aggregated value does not have the same unit as the other cell
  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.
  if (params.aggregation && !params.aggregation.hasCellUnit) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(RatingValue, {
    value: params.value
  });
}