import { GridRowModel, GridGetRowsResponse, GridColDef, GridInitialState } from '@mui/x-data-grid-pro';
import { AddPathToDemoDataOptions } from '../services/tree-data-generator';
import type { ServerOptions } from './serverUtils';
export declare const BASE_URL = "https://mui.com/x/api/data-grid";
type UseMockServerResponse = {
    columns: GridColDef[];
    initialState: GridInitialState;
    getGroupKey?: (row: GridRowModel) => string;
    getChildrenCount?: (row: GridRowModel) => number;
    fetchRows: (url: string) => Promise<GridGetRowsResponse>;
    loadNewData: () => void;
    isReady: boolean;
};
type DataSet = 'Commodity' | 'Employee' | 'Movies';
interface UseMockServerOptions {
    dataSet: DataSet;
    /**
     * Has no effect when DataSet='Movies'
     */
    rowLength: number;
    maxColumns?: number;
    visibleFields?: string[];
    editable?: boolean;
    treeData?: AddPathToDemoDataOptions;
    rowGrouping?: boolean;
}
export declare const useMockServer: (dataSetOptions?: Partial<UseMockServerOptions>, serverOptions?: ServerOptions & {
    verbose?: boolean;
}, shouldRequestsFail?: boolean) => UseMockServerResponse;
export {};
